-- MySQL Script generated by MySQL Workbench
-- Sun Sep  2 18:53:59 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema expoCalendar
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `expoCalendar` ;

-- -----------------------------------------------------
-- Schema expoCalendar
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `expoCalendar` DEFAULT CHARACTER SET utf8 ;
USE `expoCalendar` ;

-- -----------------------------------------------------
-- Table `expoCalendar`.`Exhibitions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `expoCalendar`.`Exhibitions` (
  `exhibitionId` INT NOT NULL AUTO_INCREMENT,
  `exhibitionName` VARCHAR(255) NOT NULL,
  `price` INT NOT NULL,
  `exhibStart` DATE NOT NULL,
  `exhibEnd` DATE NOT NULL,
  PRIMARY KEY (`exhibitionId`));


-- -----------------------------------------------------
-- Table `expoCalendar`.`expoHall`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `expoCalendar`.`expoHall` (
  `expoHallId` INT NOT NULL AUTO_INCREMENT,
  `expoHallName` VARCHAR(100) NOT NULL,
  `expo_exhibitionId` INT NOT NULL,
  PRIMARY KEY (`expoHallId`),
  INDEX `fk_expoHall_Exhibitions1_idx` (`expo_exhibitionId` ASC),
  CONSTRAINT `fk_expoHall_Exhibitions1`
    FOREIGN KEY (`expo_exhibitionId`)
    REFERENCES `expoCalendar`.`Exhibitions` (`exhibitionId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `expoCalendar`.`Visitors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `expoCalendar`.`Visitors` (
  `visitorId` INT NOT NULL AUTO_INCREMENT,
  `visitorName` VARCHAR(100) NOT NULL,
  `login` VARCHAR(50) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  `isAdmin` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`visitorId`));


-- -----------------------------------------------------
-- Table `expoCalendar`.`Payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `expoCalendar`.`Payment` (
  `paymentId` INT NOT NULL AUTO_INCREMENT,
  `paymentTime` TIMESTAMP(1) NOT NULL DEFAULT NOW(),
  `patmentVisitorId` INT NOT NULL,
  `total` INT NOT NULL,
  PRIMARY KEY (`paymentId`),
  INDEX `fk_Payment_Visitors1_idx` (`patmentVisitorId` ASC),
  CONSTRAINT `fk_Payment_Visitors1`
    FOREIGN KEY (`patmentVisitorId`)
    REFERENCES `expoCalendar`.`Visitors` (`visitorId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `expoCalendar`.`Tickets`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `expoCalendar`.`Tickets` (
  `ticketId` INT NOT NULL AUTO_INCREMENT,
  `ticketIsSold` TINYINT(1) NOT NULL,
  `ticket_exhibitionId` INT NOT NULL,
  PRIMARY KEY (`ticketId`),
  INDEX `fk_Tickets_Exhibitions1_idx` (`ticket_exhibitionId` ASC),
  CONSTRAINT `fk_Tickets_Exhibitions1`
    FOREIGN KEY (`ticket_exhibitionId`)
    REFERENCES `expoCalendar`.`Exhibitions` (`exhibitionId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `expoCalendar`.`PamentTicket`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `expoCalendar`.`PamentTicket` (
  `PamentTicketId` INT NOT NULL AUTO_INCREMENT,
  `PayTicket_TicketId` INT NOT NULL,
  `PayTicket_PaymentId` INT NOT NULL,
  PRIMARY KEY (`PamentTicketId`),
  INDEX `fk_PamentTicket_Tickets1_idx` (`PayTicket_TicketId` ASC),
  INDEX `fk_PamentTicket_Payment1_idx` (`PayTicket_PaymentId` ASC),
  CONSTRAINT `fk_PamentTicket_Tickets1`
    FOREIGN KEY (`PayTicket_TicketId`)
    REFERENCES `expoCalendar`.`Tickets` (`ticketId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PamentTicket_Payment1`
    FOREIGN KEY (`PayTicket_PaymentId`)
    REFERENCES `expoCalendar`.`Payment` (`paymentId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
